Для решения задач используется Chicken Scheme.
Запуск REPL: csi
Руководство: http://wiki.call-cc.org/man/4/The%20User%27s%20Manual


1. Cкрипт, выводящий все аргументы командной строки на stdout, каждый аргумент
на отдельной строке.

$ ./task1.scm a little teapot
a
little
teapot

Полезное:
- (argv)
- (print)
- запуск в скрипт-режиме: /usr/local/bin/csi -s file.scm


2. Скрипт, проверяющий, является ли argv[1] палиндромом.

$ ./ispal.scm anna
#t
$ ./ispal.scm teapot
#f

Полезное:
- (string->list s)
- (list->string lst)


3. Скрипт, принимающий в командной строке два аргумента: wildcard и строку –
и выполняющий сопоставление с образцом.


4. Встраивание Chicken Scheme в программу на си. Написать программу на си и
scheme, вычисляющую формулы. Формулы даются на stdin и состоят из вещественных
констант, знаков операций +-*/ и скобок, каждая формула на отдельной строке.
Программа должна состоять из си-модуля и scheme-модуля. Си-модуль читает
очередную формулу и передает ее как строку в scheme-функцию, которая
возвращает ПОЛИЗ:

(2.7 + 3.8) * 15  ->  '(2.7 3.8 #\+ 15 #\*)

Далее си-модуль вычисляет значение ПОЛИЗ-формулы и выводит на stdout.

Материалы:
- Встраивание scheme в си:
  https://wiki.call-cc.org/man/4/Embedding
- Пример си- и scheme-модуля:
  https://wiki.call-cc.org/man/4/Embedding#chicken_yield
- Представление scheme-данных и как с ним работать из си:
  http://wiki.call-cc.org/man/4/Data%20representation