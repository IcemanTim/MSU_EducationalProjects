{Author: Galkov A.V
  Group: 115
   Этап: 2
   Task: 1)Поиск точки пресечения функций f(x)=5/x и g(x)=2.5*x-9.5
           Комбинированный метод
         2)Вычисление интеграла от функции f(x)=5/x
           Квадратурная формула: Формула Симпсона}
program prog(input,output);
var     a,b,eps1,eps2,int:real;
        k:integer;

{Функция для вычисления значения h(x)=f(x)-g(x) в точке}
function h(x:real):real;
begin
 h:=2.5*x-9.5-5/x;
end;

{Функция для вычисления значения первой производной}
function f1(x:real):real;
begin
 f1:=(2.5*sqr(x)+5)/sqr(x);
end;

{Процедура для нахождения точки пересечения функций в первом случае}
procedure root1(var a,b,eps1:real);
var i:integer;
    c1,c2:real;
begin
 i:=0;
 repeat
       {Нахождение новых граничных точек}
       c1:=(a*h(b)-b*h(a))/(h(b)-h(a));
       c2:=b-h(b)/f1(b);

       a:=c1;
       b:=c2;
       {Счетчик итераций}
       i:=i+1;
       writeln('Номер итерации: ',i,', a=',a:10:3,', b=',b:10:3);
 until abs(b-a)<eps1;
 writeln;
 writeln('Номер итерации: ',i,', приблизительное значение корня:',(a+b)/2:10:3);
end;

{Процедура для нахождения точки пересечения функций во втором случае}
procedure root2(var a,b,eps1:real);
var i:integer;
    c1,c2:real;
begin
 i:=0;
 repeat
       {Нахождение новых граничных точек}
       c1:=(a*h(b)-b*h(a))/(h(b)-h(a));
       c2:=a-h(a)/f1(a);

       a:=c2;
       b:=c1;
       {Счетчик итераций}
       i:=i+1;
       writeln('Номер итерации: ',i,', a=',a:10:3,', b=',b:10:3);
 until abs(b-a)<eps1;
 writeln;
 writeln('Номер итерации: ',i,', приблизительное значение корня:',(a+b)/2:10:3);
end;


{Процедура для проверки случая}
procedure prov(var a,b,eps1:real);
begin
 if ( h(a)<0 ) and
    ( h( (a+b)/2 )<( h(a)+h(b) ) / 2) or
    ( h(a)<0 ) and
    ( h( (a+b)/2 )<( h(a)+h(b) ) / 2)
                                        then
                                            root1(a,b,eps1)
                                        else
                                            root2(a,b,eps1);
end;

{Функция для вычисления значения f(x)=5/x в точке}
function f(x:real):real;
begin
 f:=5/x;
end;

{Функция для вычисления интеграла}
function integral(var k:integer; var a,b,eps2:real):real;
var      n,i:integer;
         intn,int2n,s,p:real;
begin
 n:=1;                       { - начальное количество разбиений}
 int2n:=(f(a)+f(b))*(b-a)/3; { - начальное значение интеграла}
 s:=0;                       { - переменная для подсчета промежуточных сумм}
 p:=(b-a)/n;     { - начальная длина отрезков, на которые разбивается [a,b]}
 repeat
  intn:=int2n;   { присваиваем предыдущему значению интеграла более точное}
  int2n:=int2n*3/p - 2*s;    { изменяем коэффициенты для подсчета}
  s:=0;                      {    более точного значения итеграла}
  n:=n*2;                    { увеличиваем число разбиений}
  p:=(b-a)/n;                { вычисляем новую длину отрезков}
  {Считаем сумму дополнительных значений функции}
  for i:=1 to n-1 do
                    begin
                     if i mod 2 =1 then s:=s + f(a+i*p);
                    end;

  int2n:=(int2n + 4*s)*p/3;  {Вычисляем более точное значение интеграла}
  k:=k+1;                    {счетчик итераций}
  write('Номер итерации: ',k);
  writeln(', приблизительное значение интеграла:',int2n:13:3);
 until 1/15*abs(Intn-Int2n)<eps2;
 integral:=int2n;            {Окончательное значение интеграла}
end;

begin
   writeln('Поиск точки пресечения функций f(x)=5/x и g(x)=2.5*x-9.5');
     write('Введите точность вычислений: ');
        readln(eps1);
   writeln('Введите промежуток монотонности функции, на котором ищются корни');
     write('Начало и конец через пробел (не равны нулю и одного знака): ');
        readln(a,b);
 if h(a)*h(b)>0
               then
                   writeln('Корней нет')
               else
                   prov(a,b,eps1);
   writeln;
   writeln('Вычисление интеграла функции f(x)=5/x');
     write('Введите точность вычислений: ');
        readln(eps2);
   writeln('Введите промежуток для вычисления интеграла');
     write('Начало и конец через пробел (не равны нулю и одного знака): ');
        readln(a,b);
 k:=0;
 int:=integral(k,a,b,eps2);
   writeln;
   writeln('Окончательный результат');
   write('Номер итерации: ',k);
   writeln(', приблизительное значение интеграла:',int:13:3);
   writeln('Нажмите Enter');
        readln
end.