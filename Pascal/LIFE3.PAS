{Author: Galkov A.V
 Group: 115
 Task: Game of Life
  Описание:
  - - пустая клетка
  0 - растение
  + - травоядное
  * - хищник
  # - сверхособь
  & - зараженная особь (зомби)
 Программа работает в двух режимах: отладочном и обычном.
 В отладочном режиме убраны все вероятности. Игрок может выбрать
  начальное состояние системы из предложенных или задать вручную.
 Везде, где нужно добавить или убрать существо, от игрока требуется
  ввести номер строки и столбца элемента, который необходимо изменить.
 В обычном режиме система изначально заполнена пустыми клетками,
  а начальное количество растений и травоядных задается игроком.
 Далее система заполняется случайным образом.
 В пустой клетке с вероятностью 5% может появиться растение
  и с такой же вероятностью травоядное.

 Общие правила.
 Если рядом с растением есть травоядное, то травоядное
  еcт растение, а на месте растения рождается другое травоядное.
 Если рядом с травоядным есть хищник, то хищник ест травоядное,
  а на месте травоядного рождается еще один хищник.
 Если рядом с хищником есть сверхособь, то она ест хищника,
  а на его месте рождается другая сверхособь.
 Если рядом с травоядным нет ни растений, ни хищников,
  то оно становится хищником.
 Аналогично, если рядом с хищником нет ни травоядных, ни сверхособей,
  то хищник становится сверхособью.
 Что касается сверхособей, то их никто не ест, и они ни в кого не
  превращаются, на то они и сверхособи. Однако, если игрок
  начнет эпидемию, то среди них появятся заразные особи-зомби,
  причем, если менее половины клеток вокруг сверхособи заняты
  зомби, то они ее обращают в себе подобную, иначе просто съедают ее.
 Само существо-зомби, если рядом с ним более половины таких же
  существ-зомби, умирает.
 На других существ, кроме сверхособей, зомби никак не реагируют.
 За один ход с особью может произойти только одно изменение.
 Также игрок имеет право добавить любое количество растений,
  травоядных, хищников, сверхособей, начать эпидемию,
  остановить ее, устроить метеоритный дождь
  (выбираются произвольным образом некоторое количество клеток, и все,
  что в них, а также в четырех ближайших клетках умирает
  - туда попадает метеорит).
 Чтобы остановить игру, пользователь должен выбрать вариант
 "Устроить конец света".}

program prog(input,output);
const n=20; m=70;           { - размеры матрицы в обычном режиме}
      k=6; l=12;            { - размеры матрицы в отладчном режиме}
type  matr=array [1..n,1..m] of char;
var   A:matr;
      y:integer;

{Процедура инициализации начального состояния. Все клетки пустые}
procedure pysto(var A:matr);
{ - лишних параметров нет}
var   i,j:integer;
begin
 for i:=1 to n do
  for j:=1 to m do
   A[i,j]:='-';
end;

{Процедура для печати текущего состояния колоннии}
procedure print(var A:matr;p,q:integer);
{ - лишних параметров нет, p,q - размеры матрицы (зависят от режима)}
var i,j:integer;
begin
 writeln;
 for i:=1 to p do
  begin
   for j:=1 to q do
    write(A[i,j]);
   writeln
  end;
 writeln;
 write('Нажмите Enter');
 readln;
end;

{Процедура добавления существ при отладке}
procedure dob_ot(var A:matr;x:integer;ch1,ch2:char);
{ - были лишние параметры p,q. Убрал)}
var l,i,j:integer;
begin
 l:=0;
 while l<>x do
  begin
   write('Введите номер строки и столбца, в которые нужно поместить существо: ');
   readln(i,j);
    if A[i,j]=ch2
       then A[i,j]:=ch1
       else l:=l-1;
   l:=l+1;
  end;
end;


{Процедура добавления существ в обычном режиме}
procedure dob(var A:matr; x:integer;ch1,ch2:char);
{ - были лишние параметры p,q. Убрал)}
var l,i,j:integer;
begin
 l:=0;
 while l<>x do
  begin
   i:=1+random(n);
   j:=1+random(m);
   if A[i,j]=ch2
      then A[i,j]:=ch1
      else l:=l-1;
   l:=l+1;
  end;
end;

{Процедура для очистки экрана}
procedure clean;  { - нет лишних параметров}
var i:integer;
begin
 for i:=1 to 30 do writeln;
end;

{Изменение пустой клетки}
function pys:char;
{ - были лишние параметры A:matr; gr1,gr2,gr3,gr4:integer. Убрал}
var x:integer;
begin
 x:=1+random(100);
 if (x>=1) and (x<=5)
    then pys:='0'
    else if (x>=11) and (x<=15)
            then pys:='+'
            else pys:='-';
end;

{Функция изменения растений}
function eda(var A:matr; gr1,gr2,gr3,gr4:integer):char;
{ - нет лишних параметров}
var i,j:integer;
    f:boolean;
begin
 f:=false;
 for i:=gr1 to gr2 do
  for j:=gr3 to gr4 do
   if A[i,j]='+'
      then f:=true;
 if f
    then eda:='+'
    else eda:='0';
end;

{Функция изменения травоядных}
function osob1(var A:matr; gr1,gr2,gr3,gr4:integer):char;
{ - нет лишних параметров}
var i,j:integer;
    f1,f2:boolean;
begin
 f1:=false;
 f2:=false;
 for i:=gr1 to gr2 do
  for j:=gr3 to gr4 do
   case A[i,j] of
    '0': f1:=true;
    '*': f2:=true;
   end;
 if f2
    then osob1:='*'
    else if f1
            then osob1:='+'
            else osob1:='*';
end;

{Функция изменения хищников}
function osob2(var A:matr; gr1,gr2,gr3,gr4:integer):char;
{ - нет лишних параметров}
var i,j:integer;
    f1,f2:boolean;
begin
 f1:=false;
 f2:=false;
 for i:=gr1 to gr2 do
  for j:=gr3 to gr4 do
    case A[i,j] of
    '+': f1:=true;
    '#': f2:=true;
    end;
 if f2
    then osob2:='#'
    else if f1
         then osob2:='*'
         else osob2:='#'
end;

{Функция изменения сверхособей}
function osob3(var A:matr; gr1,gr2,gr3,gr4:integer):char;
{ - нет лишних параметров}
var i,j,s:integer;
begin
 s:=0;
 for i:=gr1 to gr2 do
  for j:=gr3 to gr4 do
   if A[i,j]='&'
      then s:=s+1;
 if s<>0
    then if s>(gr2-gr1+1)*(gr4-gr3+1) div 2
         then osob3:='-'
         else osob3:='&'
    else osob3:='#';
end;

{Функция изменения зомби-особи}
function zombi(var A:matr; gr1,gr2,gr3,gr4:integer):char;
{ - нет лишних праметров}
var s,i,j:integer;
begin
 s:=0;
 for i:=gr1 to gr2 do
  for j:=gr3 to gr4 do
   if A[i,j]='&'
      then s:=s+1;
 if s>=(gr2-gr1+1)*(gr4-gr3+1) div 2
    then zombi:='-'
    else zombi:='&'
end;

{Процедура изменения жизни}
procedure change(var A:matr; p,q:integer);
{ - нет лишних прарметров}
var  i,j,gr1,gr2,gr3,gr4:integer;
     B:matr;
begin
 B:=A;
 for i:=1 to p do
  for j:=1 to q do
   begin
    gr1:=i-1;
    gr2:=i+1;
    gr3:=j-1;
    gr4:=j+1;
    if i=1 then gr1:=1;
    if i=p then gr2:=p;
    if j=1 then gr3:=1;
    if j=q then gr4:=q;
    case A[i,j] of
     '-': if p=n
             then B[i,j]:=pys;
     '0': B[i,j]:=eda(A,gr1,gr2,gr3,gr4);
     '+': B[i,j]:=osob1(A,gr1,gr2,gr3,gr4);
     '*': B[i,j]:=osob2(A,gr1,gr2,gr3,gr4);
     '#': B[i,j]:=osob3(A,gr1,gr2,gr3,gr4);
     '&': B[i,j]:=zombi(A,gr1,gr2,gr3,gr4);
    end;
   end;
  A:=B;
end;

{Остановить эпидемию}
procedure stop_epid(var A:matr; p,q:integer);
{ - нет лишних параметров}
var i,j:integer;
begin
 for i:=1 to p do
  for j:=1 to q do
   if A[i,j]='&'
      then A[i,j]:='-';
end;

{Метеоритный дождь}
procedure mete_dozd(var A:matr; y:integer);
{ - нет лишних параметров}
var i,j,l:integer;
begin
 for l:=1 to y do
  begin
   i:=1+random(n);
   j:=1+random(m);
   A[i,j]:='-';
   if i<>1 then A[i-1,j]:='-';
   if i<>n then A[i+1,j]:='-';
   if j<>1 then A[i,j-1]:='-';
   if j<>m then A[i,j+1]:='-';
  end;
end;

{Метеоритный дождь. Отладка}
procedure mete_dozd_ot(var A:matr; y:integer);
{ - были лишние параметры p,q. Убрал}
var i,j,z:integer;
begin
 z:=0;
 while z<>y do
  begin
   write('Введите номер строки и столбца элемента, в который попал метеорит: ');
   readln(i,j);
   A[i,j]:='-';
   if i<>1 then A[i-1,j]:='-';
   if i<>k then A[i+1,j]:='-';
   if j<>1 then A[i,j-1]:='-';
   if j<>l then A[i,j+1]:='-';
   z:=z+1;
  end;
end;

{Конец света}
procedure apoc(var A:matr; p,q:integer);
{ - нет лишних параметров}
var   i,j:integer;
begin
 for i:=1 to p do
  for j:=1 to q do
   if A[i,j]<>'-'
      then A[i,j]:='';
end;

{Основная часть}
procedure main_part(var A:matr; p,q:integer);
{ - нет лишних параметров}
var x,y:integer;

{Проверка наличия мест}
function prov_mest(var A:matr; y,p,q:integer; ch:char):boolean;
{ - лишних параметров нет}
var s,i,j:integer;
begin
 s:=0;
 for i:=1 to p do
  for j:=1 to q do
   if A[i,j]=ch
      then  s:=s+1;
 if y>s
    then prov_mest:=false
    else prov_mest:=true;
end;

begin
 repeat
  change(A,p,q);
  print(A,p,q);
  writeln('Введите: 1-добавить растения,');
  writeln('         2-добавить травоядных,');
  writeln('         3-добавить хищников');
  writeln('         4-добавить сверхособей,');
  writeln('         5-начать эпидемию');
  writeln('         6-остановить эпидемию');
  writeln('         9-метеоритный дождь');
  writeln('         0-ничего не делать,');
  writeln('         666-устроить конец света');
  readln(x);
  case x of
   1: begin
       write('Введите количество добавляемых растений: ');
       readln(y);
       if prov_mest(A,y,p,q,'-')
          then if p=n
                  then dob(A,y,'0','-')
                  else dob_ot(A,y,'0','-')
          else writeln('Нехватает мест');
      end;
   2: begin
       write('Введите количество добавляемых травоядных: ');
       readln(y);
       if prov_mest(A,y,p,q,'-')
          then if p=n
                  then dob(A,y,'+','-')
                  else dob_ot(A,y,'+','-')
          else writeln('Нехватает мест');
      end;
   3: begin
       write('Введите количество добавляемых хищников: ');
       readln(y);
       if prov_mest(A,y,p,q,'-')
          then if p=n
                  then dob(A,y,'*','-')
                  else dob_ot(A,y,'*','-')
          else writeln('Нехватает мест');
      end;
   4: begin
       write('Введите количество добавляемых сверхособей: ');
       readln(y);
       if prov_mest(A,y,p,q,'-')
          then if p=n
                  then dob(A,y,'#','-')
                  else dob_ot(A,y,'#','-')
          else writeln('Нехватает мест');
      end;
   5: begin
       write('Введите количество добавляемых зомби: ');
       readln(y);
       if prov_mest(A,y,p,q,'#')
          then if p=n
                  then dob(A,y,'&','#')
                  else dob_ot(A,y,'&','#')
          else writeln('Нехватает мест');
      end;
   6: stop_epid(A,p,q);
   9: begin
       write('Введите количество метеоритов: ');
       readln(y);
       if p=n
          then mete_dozd(A,y)
          else mete_dozd_ot(A,y);
      end;
   0:;
   666: apoc(A,p,q);
  end;
  print(A,p,q);
 until x=666;
end;

{Отладочный режим}
procedure otlad(var A:matr);
{ - нет лишних параметров}
var x:integer;

{Процедура задания начального состояния - 1}
procedure nach_1(var A:matr);
{ - нет лишних параметров}
begin
 A[1,1]:='0'; A[1,2]:='+'; A[1,3]:='-'; A[1,4]:='+'; A[1,5]:='+'; A[1,6]:='-';
 A[1,7]:='-'; A[1,8]:='-'; A[1,9]:='-'; A[1,10]:='&'; A[1,11]:='&'; A[1,12]:='&';

 A[2,1]:='-'; A[2,2]:='-'; A[2,3]:='-'; A[2,4]:='-'; A[2,5]:='-'; A[2,6]:='-';
 A[2,7]:='*'; A[2,8]:='*'; A[2,9]:='-'; A[2,10]:='&'; A[2,11]:='&'; A[2,12]:='&';

 A[3,1]:='*'; A[3,2]:='#'; A[3,3]:='-'; A[3,4]:='-'; A[3,5]:='-'; A[3,6]:='-';
 A[3,7]:='-'; A[3,8]:='-'; A[3,9]:='-'; A[3,10]:='&'; A[3,11]:='&'; A[3,12]:='&';

 A[4,1]:='-'; A[4,2]:='-'; A[4,3]:='-'; A[4,4]:='-'; A[4,5]:='&'; A[4,6]:='-';
 A[4,7]:='&'; A[4,8]:='-'; A[4,9]:='-'; A[4,10]:='-'; A[4,11]:='+'; A[4,12]:='*';

 A[5,1]:='-'; A[5,2]:='-'; A[5,3]:='-'; A[5,4]:='-'; A[5,5]:='&'; A[5,6]:='#';
 A[5,7]:='&'; A[5,8]:='-'; A[5,9]:='-'; A[5,10]:='-'; A[5,11]:='-'; A[5,12]:='-';

 A[6,1]:='-'; A[6,2]:='-'; A[6,3]:='-'; A[6,4]:='-'; A[6,5]:='&'; A[6,6]:='&';
 A[6,7]:='&'; A[6,8]:='-'; A[6,9]:='-'; A[6,10]:='-'; A[6,11]:='#'; A[6,12]:='&';
end;

{Процедура задания начального состояния - 2}
procedure nach_2(var A:matr);
{ - нет лишних параметров}
begin
 A[1,1]:='0'; A[1,2]:='+'; A[1,3]:='-'; A[1,4]:='-'; A[1,5]:='-'; A[1,6]:='-';
 A[1,7]:='-'; A[1,8]:='-'; A[1,9]:='-'; A[1,10]:='-'; A[1,11]:='+'; A[1,12]:='0';

 A[2,1]:='-'; A[2,2]:='0'; A[2,3]:='+'; A[2,4]:='-'; A[2,5]:='-'; A[2,6]:='-';
 A[2,7]:='-'; A[2,8]:='-'; A[2,9]:='-'; A[2,10]:='+'; A[2,11]:='0'; A[2,12]:='-';

 A[3,1]:='-'; A[3,2]:='-'; A[3,3]:='0'; A[3,4]:='+'; A[3,5]:='-'; A[3,6]:='-';
 A[3,7]:='-'; A[3,8]:='-'; A[3,9]:='+'; A[3,10]:='0'; A[3,11]:='-'; A[3,12]:='-';

 A[4,1]:='-'; A[4,2]:='-'; A[4,3]:='-'; A[4,4]:='0'; A[4,5]:='+'; A[4,6]:='-';
 A[4,7]:='-'; A[4,8]:='+'; A[4,9]:='0'; A[4,10]:='-'; A[4,11]:='-'; A[4,12]:='-';

 A[5,1]:='-'; A[5,2]:='-'; A[5,3]:='-'; A[5,4]:='-'; A[5,5]:='0'; A[5,6]:='+';
 A[5,7]:='+'; A[5,8]:='0'; A[5,9]:='-'; A[5,10]:='-'; A[5,11]:='-'; A[5,12]:='-';

 A[6,1]:='+'; A[6,2]:='+'; A[6,3]:='+'; A[6,4]:='+'; A[6,5]:='+'; A[6,6]:='0';
 A[6,7]:='0'; A[6,8]:='+'; A[6,9]:='+'; A[6,10]:='+'; A[6,11]:='+'; A[6,12]:='+';
end;

{Процедура задания начального состояния - 3}
procedure nach_3(var A:matr);
{ - нет лишних параметров}
var i,j:integer;
begin
 for i:=1 to k do
  begin
   write('Введите ',i,'-ю строку (12 символов без пробелов): ');
   for j:=1 to l do
    read(A[i,j]);
   readln;
  end;
end;

begin
 writeln('Выберите начальное состояние:');
 writeln('1 - 0+-++----&&&        2 - 0+--------+0');
 writeln('    ------**-&&&            -0+------+0-');
 writeln('    *#-------&&&            --0+----+0--');
 writeln('    ----&-&---+*            ---0+--+0---');
 writeln('    ----&#&-----            ----0++0----');
 writeln('    ----&&&---#&            +++++00+++++');
 writeln('3 - Задать вручную');
 write('>');
 readln(x);
 case x of
 1: nach_1(A);
 2: nach_2(A);
 3: nach_3(A);
 end;
 print(A,k,l);
 main_part(A,k,l);
end;

{Обычный режим}
procedure common(var A:matr);
{ - нет лишних параметров}
var x:integer;
begin
 pysto(A);
 write('Введите начальное количество особей (не более 250): ');
  readln(x);
 dob(A,x,'+','-');
 print(A,n,m);

 write('Введите начальное количиство еды (не более 250): ');
  readln(x);
 dob(A,x,'0','-');
 print(A,n,m);
 main_part(A,n,m);
end;

begin
 randomize;
 writeln('*************************Вас приветствует игра "Жизнь"*************************');
 writeln;
 writeln('- - пустая клетка');
 writeln('0 - растение');
 writeln('+ - травоядное');
 writeln('* - хищник');
 writeln('# - сверхособь');
 writeln('& - зараженная особь (зомби)');
 writeln('Программа работает в двух режимах: отладочном и обычном.');
 writeln('В отладочном режиме убраны все вероятности. Игрок может выбрать');
 writeln(' начальное состояние системы из предложенных или задать вручную.');
 writeln('Везде, где нужно добавить или убрать существо, от игрока требуется');
 writeln(' ввести номер строки и столбца элемента, который необходимо изменить.');
 writeln('В обычном режиме система изначально заполнена пустыми клетками,');
 writeln(' а начальное количество растений и травоядных задается игроком.');
 writeln('Далее система заполняется случайным образом.');
 writeln('В пустой клетке с вероятностью 5% может появиться растение');
 writeln(' и с такой же вероятностью травоядное.');
 write('Нажмите Enter');
 readln;
 writeln;

 writeln('Общие правила.');
 writeln('Если рядом с растением есть травоядное, то травоядное');
 writeln(' еcт растение, а на месте растения рождается другое травоядное.');
 writeln('Если рядом с травоядным есть хищник, то хищник ест травоядное,');
 writeln(' а на месте травоядного рождается еще один хищник.');
 writeln('Если рядом с хищником есть сверхособь, то она ест хищника,');
 writeln(' а на его месте рождается другая сверхособь.');
 writeln('Если рядом с травоядным нет ни растений, ни хищников,');
 writeln(' то оно становится хищником.');
 writeln('Аналогично, если рядом с хищником нет ни травоядных, ни сверхособей,');
 writeln(' то хищник становится сверхособью.');
 writeln('Что касается сверхособей, то их никто не ест, и они ни в кого не');
 writeln(' превращаются, на то они и сверхособи. Однако, если игрок');
 writeln(' начнет эпидемию, то среди них появятся заразные особи-зомби,');
 writeln(' причем, если менее половины клеток вокруг сверхособи заняты');
 writeln(' зомби, то они ее обращают в себе подобную, иначе просто съедают ее.');
 writeln('Само существо-зомби, если рядом с ним более половины таких же');
 writeln(' существ-зомби, умирает.');
 writeln('На других существ, кроме сверхособей, зомби никак не реагируют.');
 write('Нажмите Enter');
 readln;
 writeln;

 writeln('За один ход с особью может произойти только одно изменение.');
 writeln('Также игрок имеет право добавить любое количество растений,');
 writeln(' травоядных, хищников, сверхособей, начать эпидемию,');
 writeln(' остановить ее, устроить метеоритный дождь');
 writeln(' (выбираются произвольным образом некоторое количество клеток, и все,');
 writeln(' что в них, а также в четырех ближайших клетках умирает');
 writeln(' - туда попадает метеорит).');
 writeln('Чтобы остановить игру, пользователь должен выбрать вариант');
 writeln(' "Устроить конец света".');
 write('Нажмите Enter');
 readln;
 clean;
 writeln('1 - отладочный режим');
 writeln('2 - обычный режим');
 write('>');
 readln(y);
 clean;
 if y=1
    then begin
          otlad(A);
          writeln('Конец света наступил.');
          clean;
         end
    else begin
          common(A);
          writeln('Конец света наступил.');
          clean;
         end;
end.